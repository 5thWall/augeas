.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "AUGTOOL 1"
.TH AUGTOOL 1 "2008-04-23" "perl v5.8.8" "Augeas"
.SH "NAME"
augtool \- inspect and modify configuration files
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
augtool [\s-1OPTIONS\s0] [\s-1COMMAND\s0]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Augeas is a configuration editing tool. It parses configuration files
in their native formats and transforms them into a tree. Configuration
changes are made by manipulating this tree and saving it back into
native config files.
.PP
augtool provides a command line interface to the generated tree. \s-1COMMAND\s0
can be a single command as described under \*(L"\s-1COMMANDS\s0\*(R". When called with
no \s-1COMMAND\s0, it reads commands from standard input until an end-of-file is
encountered.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-c\fR" 4
.IX Item "-c"
Typecheck lenses. This can be very slow, and is therefore not done by
default, but is highly recommended during development.
.IP "\fB\-b\fR" 4
.IX Item "-b"
When files are changed, preserve the originals in a file with extension
\&'.augsave'
.IP "\fB\-n\fR" 4
.IX Item "-n"
Save changes in files with extension '.augnew', do not modify the original
files
.IP "\fB\-r\fR \fI\s-1ROOT\s0\fR" 4
.IX Item "-r ROOT"
Use directory \s-1ROOT\s0 as the root of the filesystem. Takes precedence over a
root set with the \s-1AUGEAS_ROOT\s0 environment variable.
.IP "\fB\-I\fR \fI\s-1DIR\s0\fR" 4
.IX Item "-I DIR"
Add \s-1DIR\s0 to the module loadpath. Can be given multiple times. The
directories set here are searched before any directories specified in the
\&\s-1AUGEAS_LENS_LIB\s0 environment variable, and before the default directory
\&\fI/usr/share/augeas/lenses\fR.
.SH "COMMANDS"
.IX Header "COMMANDS"
In interactive mode, commands and paths can be completed by pressing \f(CW\*(C`TAB\*(C'\fR.
.PP
The paths accepted as arguments by commands use a small subset of XPath
path expressions. A path expression consists of a number of segments,
separated by \f(CW\*(C`/\*(C'\fR. In each segment, the character \f(CW\*(C`*\*(C'\fR can be used to match
every node regardless of its label. Sibling nodes with identical labels can
be distinguished by appending \f(CW\*(C`[N]\*(C'\fR to their label to match the N\-th
sibling with such a label. The last sibling with a specific label can be
reached as \f(CW\*(C`[last()]\*(C'\fR. See \*(L"\s-1EXAMPLES\s0\*(R" for some examples of this.
.IP "\fBexit\fR, \fBquit\fR" 4
.IX Item "exit, quit"
Exit the program
.IP "\fBls\fR <\s-1PATH\s0>" 4
.IX Item "ls <PATH>"
List the direct children of \s-1PATH\s0
.IP "\fBmatch\fR <\s-1PATTERN\s0> [<\s-1VALUE\s0>]" 4
.IX Item "match <PATTERN> [<VALUE>]"
Find all paths that match \s-1PATTERN\s0. If \s-1VALUE\s0 is given, only the matching
paths whose value equals \s-1VALUE\s0 are printed
.IP "\fBrm\fR <\s-1PATH\s0>" 4
.IX Item "rm <PATH>"
Delete \s-1PATH\s0 and all its children from the tree
.IP "\fBset\fR <\s-1PATH\s0> <\s-1VALUE\s0>" 4
.IX Item "set <PATH> <VALUE>"
Associate \s-1VALUE\s0 with \s-1PATH\s0. If \s-1PATH\s0 is not in the tree yet,
it and all its ancestors will be created.
.IP "\fBclear\fR <\s-1PATH\s0>" 4
.IX Item "clear <PATH>"
Set the value for \s-1PATH\s0 to \s-1NULL\s0. If \s-1PATH\s0 is not in the tree yet, it and all
its ancestors will be created.
.IP "\fBget\fR <\s-1PATH\s0>" 4
.IX Item "get <PATH>"
Print the value associated with \s-1PATH\s0
.IP "\fBprint\fR \fI[<\s-1PATH\s0>]\fR" 4
.IX Item "print [<PATH>]"
Print entries in the tree. If \s-1PATH\s0 is given, printing starts there,
otherwise the whole tree is printed
.IP "\fBins\fR \fI<\s-1LABEL\s0>\fR \fI<\s-1WHERE\s0>\fR \fI<\s-1PATH\s0>\fR" 4
.IX Item "ins <LABEL> <WHERE> <PATH>"
Insert a new node with label \s-1LABEL\s0 right before or after \s-1PATH\s0 into the
tree. \s-1WHERE\s0 must be either 'before' or 'after'.
.IP "\fBsave\fR" 4
.IX Item "save"
Save all pending changes to disk. Unless either the \fB\-b\fR or \fB\-n\fR
command line options are given, files are changed in place.
.IP "\fBhelp\fR" 4
.IX Item "help"
Print this help text
.SH "ENVIRONMENT VARIABLES"
.IX Header "ENVIRONMENT VARIABLES"
.IP "\fB\s-1AUGEAS_ROOT\s0\fR" 4
.IX Item "AUGEAS_ROOT"
The file system root, defaults to '/'. Can be overridden with
the \fB\-r\fR command line option
.IP "\fB\s-1AUGEAS_LENS_LIB\s0\fR" 4
.IX Item "AUGEAS_LENS_LIB"
Colon separated list of directories with lenses. Directories specified here
are searched after any directories set with the \fB\-I\fR command line option,
but before the default directory \fI/usr/share/augeas/lenses\fR
.SH "EXAMPLES"
.IX Header "EXAMPLES"
.Vb 2
\&  # command line mode
\&  augtool print /files/etc/hosts/
.Ve
.PP
.Vb 4
\&  # interactive mode
\&  augtool
\&  augtool> help
\&  augtool> print /files/etc/hosts/
.Ve
.PP
.Vb 2
\&  # Print the third entry from the second AcceptEnv line
\&  augtool print '/files/etc/ssh/sshd_config/AcceptEnv[2]/3'
.Ve
.PP
.Vb 2
\&  # Find the entry in inittab with action 'initdefault'
\&  augtool> match /files/etc/inittab/*/action initdefault
.Ve
.PP
.Vb 2
\&  # Print the last alias for each entry in /etc/hosts
\&  augtool> print /files/etc/hosts/*/alias[last()]
.Ve
.SH "FILES"
.IX Header "FILES"
Lenses and schema definitions in \fI/usr/share/augeas/lenses\fR
.SH "AUTHOR"
.IX Header "AUTHOR"
.Vb 1
\&  David Lutterkort <dlutter@redhat.com>
.Ve
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright 2007, 2008 Red Hat Inc.
.PP
Augeas (and augtool) are distributed under the \s-1GNU\s0 Lesser General Public
License (\s-1LGPL\s0)
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBAugeas\fR project homepage <http://www.augeas.net/>
.PP
augparse
